{
  "_args": [
    [
      {
        "raw": "oh-no-i-insist@https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
        "scope": null,
        "escapedName": "oh-no-i-insist",
        "name": "oh-no-i-insist",
        "rawSpec": "https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
        "spec": "https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
        "type": "remote"
      },
      "C:\\Users\\prath\\Google Drive\\SBOI\\southbendvotingbot\\node_modules\\claudia-bot-builder"
    ]
  ],
  "_from": "oh-no-i-insist@https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
  "_id": "oh-no-i-insist@1.1.1",
  "_inCache": true,
  "_location": "/claudia-bot-builder/oh-no-i-insist",
  "_phantomChildren": {},
  "_requested": {
    "raw": "oh-no-i-insist@https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
    "scope": null,
    "escapedName": "oh-no-i-insist",
    "name": "oh-no-i-insist",
    "rawSpec": "https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
    "spec": "https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/claudia-bot-builder",
    "/claudia-bot-builder/claudia"
  ],
  "_resolved": "https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
  "_shasum": "af6f12e2d43366839bae45f8c870b976a11eee35",
  "_shrinkwrap": null,
  "_spec": "oh-no-i-insist@https://registry.npmjs.org/oh-no-i-insist/-/oh-no-i-insist-1.1.1.tgz",
  "_where": "C:\\Users\\prath\\Google Drive\\SBOI\\southbendvotingbot\\node_modules\\claudia-bot-builder",
  "author": {
    "name": "Gojko Adzic",
    "email": "gojko@gojko.com"
  },
  "bugs": {
    "url": "https://github.com/gojko/oh-no-i-insist/issues"
  },
  "dependencies": {},
  "description": "flexible retry for JavaScript promises",
  "devDependencies": {
    "jasmine": "^2.4.1",
    "jasmine-spec-reporter": "^2.4.0"
  },
  "homepage": "https://github.com/gojko/oh-no-i-insist#readme",
  "keywords": [
    "promise",
    "retry"
  ],
  "license": "MIT",
  "main": "retry.js",
  "name": "oh-no-i-insist",
  "optionalDependencies": {},
  "readme": "# Oh, no, I insist\n\n[![Build Status](https://travis-ci.org/gojko/oh-no-i-insist.svg?branch=master)](https://travis-ci.org/gojko/oh-no-i-insist)\n\nFlexible retry for JavaScript promises. Supports native Promises and 3rd party A+ Promise libraries.\n\n## Installation\n\nInstall using NPM\n\n```bash\nnpm install oh-no-i-insist -S\n```\n\n[![NPM](https://nodei.co/npm/oh-no-i-insist.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/oh-no-i-insist/)\n\n## Usage\n\n```javascript\n retry(promiseGenerator, delay, maxTimes, predicate, onRetry, PromiseImplementation)\n```\n\n* `promiseGenerator`: `function` that should return a `Promise` you want to retry. Will be invoked once per each try.\n* `delay`: `int` number of milliseconds between retries\n* `maxTimes`: `int` the number of times to retry \n* `predicate`: `function (error)` __optional__ a function executed to check if the error is retriable. It will receive the error/rejection reason, and should return `true` if it is retriable. Return `false` to break the retry chain.\n* `onRetry`: `function` __optional__ a function that will be executed before waiting for each retry, but not before the first try. Use this to clean up resources, tell the user that you're waiting for a retry and things like that\n* `PromiseImplementation`: `class` __optional__ if working with an older Node.js implementation, the 3rd party `Promise` implementation that you want to use. If working with a more recent Node.js version and you want to use the native `Promise`, don't supply this argumenrt\n\n## Example\n\n```javascript\nvar retry = require('oh-no-i-insist'),\n  generator = function() { \n    return new Promise(function (resolve, reject) { \n      var x = Math.random();\n      if (x < 0.3) { \n        resolve(x);\n      } else {\n        reject(x);\n      } \n    }); \n  }, shouldRetry = function (number) {\n    console.log('got wrong', number);\n    return number > 0.6;\n  }, onRetry = function () {\n    console.log('waiting for retry');\n  };\n\nretry(generator, 100, 5, shouldRetry, onRetry).then(function (num) {\n  console.log('generated', num);\n}, function (err) {\n  console.log('failed with', err);\n});\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gojko/oh-no-i-insist.git"
  },
  "scripts": {
    "test": "node spec/support/jasmine-runner.js"
  },
  "version": "1.1.1"
}
